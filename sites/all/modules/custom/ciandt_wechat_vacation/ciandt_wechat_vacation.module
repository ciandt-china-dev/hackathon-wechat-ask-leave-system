<?php

/**
 * @file
 * Ciandt_wechat_vacation module.
 */

/**
 * Implements hook_menu().
 */
function ciandt_wechat_vacation_menu() {
  $items = array();
  $items['admin/config/vacation/enterprise-wechat'] = array(
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ciandt_wechat_vacation_enterprise_wechat_settings'),
    'title' => 'Enterprise Wechat Settings',
    'description' => 'Set access keys and other necessary configurations for enterprise wechat.',
  );

  return $items;
}


/**
 * Menu callback to configure module settings.
 */
function ciandt_wechat_vacation_enterprise_wechat_settings($form, &$form_state) {
  $form['enterprise_wechat_corp_id'] = array(
    '#type' => 'textfield',
    '#title' => t('CorpID'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#default_value' => variable_get('enterprise_wechat_corp_id'),
    '#description' => t('Set the enterprise wechat CorpID.'),
  );

  $form['enterprise_wechat_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Secret'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#default_value' => variable_get('enterprise_wechat_secret'),
    '#description' => t('Set the enterprise wechat Secret.'),
  );

  $form['enterprise_wechat_dev_mode_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Dev mode Token'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#default_value' => variable_get('enterprise_wechat_dev_mode_token'),
    '#description' => t('Set the token for dev mode.'),
  );

  $form['enterprise_wechat_dev_mode_encoding_aes_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Dev mode EncodingAESKey'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#default_value' => variable_get('enterprise_wechat_dev_mode_encoding_aes_key'),
    '#description' => t('Set the EncodingAESKey for dev mode.'),
  );

  $form['vacation_approver_wechat_tag_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Approval Wechat Tag Name'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#default_value' => variable_get('vacation_approver_wechat_tag_name'),
    '#description' => t('Set the Wechat tag name for approvers.'),
  );
  $form['vacation_approver_wechat_staff_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Stuff Password'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#default_value' => variable_get('vacation_approver_wechat_staff_password', 'cit2016'),
    '#description' => t('Set the stuff password of Weixin'),
  );

  return system_settings_form($form);
}

/**
 * Rules action for push notification.
 */
function ciandt_wechat_vacation_push_wechat_notification($target, $message) {

  // TODO: Get wechat uid/token_id by $target.
  // TODO: Send message with wechat api.
  drupal_set_message(t("vacation approve notification has been sent to approver."));
  return TRUE;
}

/**
 * Function to set Weixin API data.
 */
function _ciandt_wechat_vacation_init_obj() {
  $we_obj = &drupal_static(__FUNCTION__);
  if (!isset($we_obj)) {
    module_load_include('php', 'ciandt_wechat_vacation', 'sdk/qywechat.class');
    $options = array(
      'token' => variable_get('enterprise_wechat_dev_mode_token'),
      'appid' => variable_get('enterprise_wechat_corp_id'),
      'appsecret' => variable_get('enterprise_wechat_secret'),
      'encodingaeskey' => variable_get('enterprise_wechat_dev_mode_encoding_aes_key'),
    );
    $we_obj = new Wechat($options);
  }
  return $we_obj;
}

/**
 * Function to get tag list of Weixin API.
 */
function _ciandt_wechat_vacation_get_tag_lists() {
  $we_obj = _ciandt_wechat_vacation_init_obj();
  $taglist = $we_obj->getTagList();
  $tag_name = variable_get('vacation_approver_wechat_tag_name');
  if (isset($taglist['taglist'])) {
    foreach ($taglist['taglist'] as $v) {
      if ($tag_name == $v['tagname']) {
        $tagid = $v['tagid'];
        // Get Tag Users.
        $userlist = $we_obj->getTag($tagid);
        $user_infos = [];
        foreach ($userlist['userlist'] as $u) {
          $info = $we_obj->getUserInfo($u['userid']);
          $user_infos[] = [
            'email' => $info['email'],
            'avatar' => $info['avatar'],
            'userid' => $info['userid'],
            'name' => $info['name'],
          ];
        }
        return $user_infos;
      }
    }
  }

  return FALSE;
}
/**
 * Function to authorize(Weixin API).
 */
function _ciandt_wechat_vacation_authorize() {
  $drupal_get_path_alias = drupal_get_path_alias();
  if (FALSE !== strpos($drupal_get_path_alias, 'vacation') && empty($_SESSION['weixin']['user_id'])) {
    $code = isset($_GET['code']) ? $_GET['code'] : '';
    if (empty($code)) {
      // Get Code.
      $we_obj = _ciandt_wechat_vacation_init_obj();
      $callback = 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];

      $url = $we_obj->getOauthRedirect($callback);
      drupal_goto($url);
    }

    // Get User id.
    $we_obj = _ciandt_wechat_vacation_init_obj();
    $user_id_arr = $we_obj->getUserId($code);
    $user_id = $user_id_arr['UserId'];

    $user_info = $we_obj->getUserInfo($user_id);
    $_SESSION['weixin'] = [
      'user_id' => $user_id,
      'name' => $user_info['name'],
      'email' => $user_info['email'],
    ];
    if (!user_load_by_name($user_id)) {
      // Create user.
      $password = variable_get('vacation_approver_wechat_staff_password', 'cit2016');
      $fields = array(
        'name' => $user_id,
        'mail' => $user_info['email'],
        'pass' => $password,
        'status' => 1,
        'init' => 'email address',
        'roles' => array(
          DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        ),
        'field_weixin_name' => [],
      );
      $fields['field_weixin_name'][LANGUAGE_NONE][0]['value'] = $user_info['name'];
      // The first parameter is left blank so a new user is created.
      user_save('', $fields);
    }

  }
}

/**
 * Implements hook_block_info().
 */
function ciandt_wechat_vacation_block_info() {
  $blocks = array();
  $blocks['weixin_authorize'] = array(
    'info' => t('Weixin Authorize'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}
/**
 * Implements hook_block_view().
 */
function ciandt_wechat_vacation_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'weixin_authorize':
      $block['content'] = _ciandt_wechat_vacation_authorize();
      break;
  }
  return $block;
}

function ciandt_wechat_vacation_form_vocation_node_form_alter(&$form, &$form_state) {
  // Get approvers list.
  $options = _ciandt_wechat_vacation_get_tag_lists();

  $approve_users = array();
  $output = '<ul>';
  foreach ($options as $option) {
    $image = '<img src="' . $option['avatar'] . '"/>';
    $approve_users[$option['userid']] = '<li><span>' . $image . '</span><span>' . $option['name'] . '</span></li>';
    $output .= $approve_users[$option['userid']];
  }
  $output .= "</ul>";

  if ($option) {
    $form['approve_user_list'] = array(
      '#title' => 'Approve Users List',
      '#markup' => $output,
    );
    $form['approve_user_info'] = array(
      '#title' => 'Approve Users',
      '#type' => 'select',
      '#options' => array_keys($approve_users),
    );
    $form_state['storage']['approve_user_list'] = $options;
  }

  array_unshift($form['actions']["submit"]["#submit"], 'ciandt_wechat_vacation_form_vocation_node_form_submit');
}

/**
 * Submit vocation.
 * @param type $form
 * @param type $form_state
 */
function ciandt_wechat_vacation_form_vocation_node_form_submit(&$form, &$form_state) {

  $approve_user_info = $form_state['values']['approve_user_info'];
  $full_user_info = $form_state['storage']['approve_user_list'][$approve_user_info];
  if (!user_load_by_mail($full_user_info['email'])) {
    
  };

}